// Generated by gen-locale-defs.ts
// noinspection JSUnusedGlobalSymbols

export declare const enum L_ItemName {
  /** Assembly cleanup tool */
  CleanupTool = "item-name.bp100:cleanup-tool",
}
export declare const enum L_ShortcutName {
  /** Assembly cleanup tool */
  CleanupTool = "shortcut-name.bp100:cleanup-tool",
}
export declare const enum L_EntityName {
  /** Blueprint entity marker */
  EntityMarker = "entity-name.bp100:entity-marker",
}
export declare const enum L_ItemGroupName {
  /** BP100 utility entities */
  Utility = "item-group-name.bp100:utility",
}
export declare const enum L_ModSettingName {
  /** Use cyclic stage navigation */
  CyclicNavigation = "mod-setting-name.bp100:cyclic-navigation",
}
export declare const enum L_Controls {
  /** Next stage */
  NextStage = "controls.bp100:next-stage",
  /** Previous stage */
  PreviousStage = "controls.bp100:previous-stage",
  /** Go to entity's first stage */
  GoToFirstStage = "controls.bp100:go-to-first-stage",
  /** Go to entity's next notable stage */
  GoToNextNotableStage = "controls.bp100:go-to-next-notable-stage",
}
export declare const enum L_Bp100 {
  /** __1__ (preview) */
  PreviewEntity = "bp100.preview-entity",
  /** __1__ (selection proxy) */
  SelectionProxy = "bp100.selection-proxy",
  /** <Unnamed assembly __1__> */
  UnnamedAssembly = "bp100.unnamed-assembly",
}
export declare const enum L_Interaction {
  /** An unexpected error occurred: __1__. Additional details outputted to log. Please report this to the mod author! */
  UnexpectedError = "bp100.interaction.unexpected-error",
  /** WARNING: this blueprint is not handled. Entities that have changed settings due to pasting this blueprint will not be detected in assemblies (newly created entities are fine).\nTo fix, make a copy of the blueprint (if it is in the blueprint library) and paste again. */
  BlueprintNotHandled = "bp100.interaction.blueprint-not-handled",
  /** Entity moved from __1__ */
  EntityMovedFromStage = "bp100.interaction.entity-moved-from-stage",
  /** Entity moved back to __1__ */
  EntityMovedBackToStage = "bp100.interaction.entity-moved-back-to-stage",
  /** Cannot flip underground paired with multiple other undergrounds */
  CannotFlipUndergroundDueToMultiplePairs = "bp100.interaction.cannot-flip-underground-due-to-multiple-pairs",
  /** Cannot upgrade underground paired with multiple other undergrounds */
  CannotUpgradeUndergroundDueToMultiplePairs = "bp100.interaction.cannot-upgrade-underground-due-to-multiple-pairs",
  /** Cannot create stage upgrade if underground pair not in the same stage */
  CannotCreateUndergroundUpgradeIfNotInSameStage = "bp100.interaction.cannot-create-underground-upgrade-if-not-in-same-stage",
  /** Upgrading this will change the underground pair */
  CannotUpgradeUndergroundChangedPair = "bp100.interaction.cannot-upgrade-underground-changed-pair",
  /** Cannot move underground belt with upgrade. Try upgrading first. */
  CannotMoveUndergroundBeltWithUpgrade = "bp100.interaction.cannot-move-underground-belt-with-upgrade",
  /** Warning: flipping a ghost underground in an assembly will not check its pair, due to current limitations of the factorio modding api. */
  GhostUndergroundFlipNotHandled = "bp100.interaction.ghost-underground-flip-not-handled",
  /** Not in an assembly */
  NotInAnAssembly = "bp100.interaction.Not-in-an-assembly",
  /** No next stage */
  NoNextStage = "bp100.interaction.no-next-stage",
  /** No previous stage */
  NoPreviousStage = "bp100.interaction.no-previous-stage",
  /** Already at entity first stage */
  AlreadyAtFirstStage = "bp100.interaction.already-at-first-stage",
  /** Entity is the same in all stages */
  EntitySameInAllStages = "bp100.interaction.entity-same-in-all-stages",
}
export declare const enum L_GuiCurrentAssembly {
  /** Assembly: */
  Assembly = "bp100.gui.current-assembly.assembly",
  /** (Not in an assembly) */
  NoAssembly = "bp100.gui.current-assembly.no-assembly",
  /** Open assembly settings */
  OpenAssemblySettings = "bp100.gui.current-assembly.open-assembly-settings",
  /** Show all assemblies */
  ShowAllAssemblies = "bp100.gui.current-assembly.show-all-assemblies",
}
export declare const enum L_GuiAllAssemblies {
  /** All assemblies */
  Title = "bp100.gui.all-assemblies.title",
  /** New assembly */
  NewAssembly = "bp100.gui.all-assemblies.new-assembly",
}
export declare const enum L_GuiNewAssembly {
  /** New Assembly */
  Title = "bp100.gui.new-assembly.title",
  /** Name */
  Name = "bp100.gui.new-assembly.name",
  /** Initial number of stages */
  InitialNumStages = "bp100.gui.new-assembly.initial-num-stages",
  /** Invalid specified number of stages */
  InvalidNumStages = "bp100.gui.new-assembly.invalid-num-stages",
  /** Create */
  Create = "bp100.gui.new-assembly.create",
}
export declare const enum L_GuiAssemblySettings {
  /** Assembly */
  Title = "bp100.gui.assembly-settings.title",
  /** Rename assembly */
  RenameAssembly = "bp100.gui.assembly-settings.rename-assembly",
  /** Rename current stage */
  RenameStage = "bp100.gui.assembly-settings.rename-stage",
  /** New stage: */
  NewStage = "bp100.gui.assembly-settings.new-stage",
  /** After current */
  AfterCurrent = "bp100.gui.assembly-settings.after-current",
  /** Add front */
  AtFront = "bp100.gui.assembly-settings.at-front",
  /** Delete assembly */
  DeleteAssembly = "bp100.gui.assembly-settings.delete-assembly",
  /** Are you sure you want to delete assembly __1__? */
  DeleteAssemblyConfirmation1 = "bp100.gui.assembly-settings.delete-assembly-confirmation1",
  /** This action cannot be undone. */
  DeleteAssemblyConfirmation2 = "bp100.gui.assembly-settings.delete-assembly-confirmation2",
  /** Delete stage */
  DeleteStage = "bp100.gui.assembly-settings.delete-stage",
  /** Are you sure you want to delete stage __1__? */
  DeleteStageConfirmation1 = "bp100.gui.assembly-settings.delete-stage-confirmation1",
  /** Stage contents will be merged with the previous stage (__1__). */
  DeleteStageConfirmation2Middle = "bp100.gui.assembly-settings.delete-stage-confirmation2-middle",
  /** Stage contents will be merged with the next stage (__1__). */
  DeleteStageConfirmation2First = "bp100.gui.assembly-settings.delete-stage-confirmation2-first",
  /** Reset stage [img=info] */
  ResetStage = "bp100.gui.assembly-settings.reset-stage",
  /** Resets all entities in the stage to match the stored state.\nThis will delete and replace all entities.\nThis can also help resolve errors or inconsistencies due to bugs. */
  ResetStageTooltip = "bp100.gui.assembly-settings.reset-stage-tooltip",
  /** More settings coming soon! */
  MoreSettingsComingSoon = "bp100.gui.assembly-settings.more-settings-coming-soon",
}
